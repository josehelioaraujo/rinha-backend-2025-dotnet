events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Upstream backend
    upstream backend {
        least_conn;
        server api1:8080 max_fails=3 fail_timeout=30s;
        server api2:8080 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    server {
        listen 9999;
        server_name _;
        
        # Disable server tokens
        server_tokens off;
        
        location / {
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Performance tuning
            proxy_connect_timeout 5s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_buffering off;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }
        
        # Health check endpoint for nginx
        location /nginx-health {
            access_log off;
            return 200 "nginx-ok";
            add_header Content-Type text/plain;
        }
    }
}
